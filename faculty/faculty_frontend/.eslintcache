[{"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\index.js":"1","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\App.js":"2","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\context\\teacheridcontext.js":"3","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Error.js":"4","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Axios.js":"5","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\navbar\\Navbar.js":"6","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\DashBoard.js":"7","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\profile\\Profile.js":"8","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\announcement\\Announcement.js":"9","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\TeacherAssignment.js":"10","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\authentication\\login.js":"11","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\authentication\\Register.js":"12","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\authentication\\reset_pass.js":"13","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\protectroute\\Protectrouteteacher.js":"14","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\pdfviewer\\ViewPdf.js":"15","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\DepartmentDashBoard.js":"16","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\SubmissionStatus.js":"17","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\FilterDashBoard.js":"18","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\announcement\\CreateAnnouncement.js":"19","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\announcement\\SendAnnouncement.js":"20","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\announcement\\AllAnnouncement.js":"21","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\DepartmentDetails.js":"22","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\CreateAssignment.js":"23","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\AllAssignment.js":"24","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\UploadFiles.js":"25","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\SendPersonalEmail.js":"26"},{"size":277,"mtime":1614058002000,"results":"27","hashOfConfig":"28"},{"size":4023,"mtime":1616048141112,"results":"29","hashOfConfig":"28"},{"size":77,"mtime":1614150326000,"results":"30","hashOfConfig":"28"},{"size":914,"mtime":1614057952000,"results":"31","hashOfConfig":"28"},{"size":152,"mtime":1614057952000,"results":"32","hashOfConfig":"28"},{"size":2088,"mtime":1615656500772,"results":"33","hashOfConfig":"28"},{"size":2448,"mtime":1616058953914,"results":"34","hashOfConfig":"28"},{"size":3837,"mtime":1615545977684,"results":"35","hashOfConfig":"28"},{"size":1198,"mtime":1616069511188,"results":"36","hashOfConfig":"28"},{"size":1000,"mtime":1615700563828,"results":"37","hashOfConfig":"28"},{"size":3661,"mtime":1614918324000,"results":"38","hashOfConfig":"28"},{"size":7538,"mtime":1615051754000,"results":"39","hashOfConfig":"28"},{"size":7003,"mtime":1614057952000,"results":"40","hashOfConfig":"28"},{"size":579,"mtime":1614450236000,"results":"41","hashOfConfig":"28"},{"size":1103,"mtime":1614331774000,"results":"42","hashOfConfig":"28"},{"size":10577,"mtime":1616063586506,"results":"43","hashOfConfig":"28"},{"size":16538,"mtime":1615623600132,"results":"44","hashOfConfig":"28"},{"size":2506,"mtime":1616059121959,"results":"45","hashOfConfig":"28"},{"size":6458,"mtime":1614447722000,"results":"46","hashOfConfig":"28"},{"size":6590,"mtime":1616069271321,"results":"47","hashOfConfig":"28"},{"size":4723,"mtime":1616074806597,"results":"48","hashOfConfig":"28"},{"size":8669,"mtime":1614057954000,"results":"49","hashOfConfig":"28"},{"size":7917,"mtime":1615653588824,"results":"50","hashOfConfig":"28"},{"size":4105,"mtime":1616057990781,"results":"51","hashOfConfig":"28"},{"size":767,"mtime":1615653242809,"results":"52","hashOfConfig":"28"},{"size":4888,"mtime":1615650940307,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"13qo50y",{"filePath":"57","messages":"58","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\index.js",[],["119","120"],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\App.js",["121","122","123","124","125","126","127","128","129","130","131"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { teacherid } from \"./context/teacheridcontext.js\";\n\nimport Navbar from \"./navbar/Navbar\";\nimport DashBoard from \"./dashBoard/DashBoard\";\nimport Profile from \"./profile/Profile\";\nimport Announcement from \"./announcement/Announcement\";\nimport TeacherAssignment from \"./Teacher/TeacherAssignment\";\nimport Error from \"./Error\";\nimport axios from \"./Axios\";\n//parth\n//import ForgotPassword from './authentication/forgotPassword.component';\nimport Login from \"./authentication/login\";\n//import Register from './authentication/register.component';\n// import ResetPassword from './authentication/resetPassword.component';\nimport ResetPass from \"./authentication/reset_pass\";\nimport Register from \"./authentication/Register\";\nimport Protectrouteteacher from \"./protectroute/Protectrouteteacher\";\nimport ViewPdf from \"./pdfviewer/ViewPdf\";\nlet isAuth = localStorage.getItem(\"teacheruser\") != null;\nfunction timeout(delay) {\n  return new Promise((res) => setTimeout(res, delay));\n}\nfunction App() {\n  const [user, setuser] = useState({});\n  const [teacherid, setTeacherid] = useState(\"\");\n\n  useEffect(() => {\n    const config = {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    };\n    // axios\n    //   .get(\"\", config)\n    //   .then((res) => {\n    //     console.log(\"teacher id\" + res.data._id);\n\n    //     localStorage.setItem(\"teacheruser\", res.data._id);\n    //     timeout(100);\n    //     console.log(localStorage.getItem(\"teacheruser\"));\n    //     if (localStorage.getItem(\"teacheruser\") != null)\n    //       setuser({ userid: localStorage.getItem(\"teacheruser\") });\n    //     // console.log('sdjg')\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n    if (localStorage.getItem(\"teacheruser\") != null)\n      setuser({ teacherid: localStorage.getItem(\"teacheruser\") });\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.clear();\n    setuser({});\n  };\n\n  return (\n    <>\n      {/* <Nav  user= {this.state.user}  setUser = { this.setUser}/> */}\n\n      {localStorage.getItem(\"teacheruser\") === null ? null : (\n        <Navbar user={user} handleLogout={handleLogout} />\n      )}\n\n      {/* <teacherid.provider value={[teacherid, setTeacherid]}> */}\n      <Switch>\n        {/* <Protectrouteteacher\n          exact\n          path=\"/profile\"\n          Component={Profile}\n          isAuth={isAuth}\n        />\n        <Protectrouteteacher\n          exact\n          path=\"/dashBoard\"\n          component={DashBoard}\n          isAuth={isAuth}\n        />\n        <Protectrouteteacher\n          exact\n          path=\"/announcement\"\n          component={Announcement}\n          isAuth={isAuth}\n        />\n        <Protectrouteteacher\n          exact\n          path=\"/teacherAssignment\"\n          component={TeacherAssignment}\n          isAuth={isAuth}\n        />\n        <Protectrouteteacher path=\"/error\" component={Error} isAuth={isAuth} /> */}\n        {localStorage.getItem(\"teacheruser\") !== null ? (\n          <>\n            <Route\n              exact\n              path=\"/profile\"\n              component={() => <Profile teacherid={user.teacherid} />}\n            />\n\n            <Route exact path=\"/dashBoard\" component={DashBoard} />\n            <Route exact path=\"/announcement\" component={Announcement} />\n            <Route\n              exact\n              path=\"/teacherAssignment\"\n              component={TeacherAssignment}\n            />\n            {/* <Route path=\"/*\" component={Error} /> */}\n          </>\n        ) : (\n          <>\n            <Route\n              exact\n              path=\"/\"\n              component={() => <Login setuser={setuser} />}\n            />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/resetPassword\" component={ResetPass} />\n          </>\n        )}\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\context\\teacheridcontext.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Error.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Axios.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\navbar\\Navbar.js",["132","133"],"import React from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\r\n//import AccountBalanceRoundedIcon from '@material-ui/icons/AccountBalanceRounded';\r\nimport MailRoundedIcon from \"@material-ui/icons/MailRounded\";\r\n\r\n//for set to local storage or session storage\r\nimport ReactSession from \"react-client-session\";\r\n\r\nimport \"./Navbar.css\";\r\nfunction Navbar(props) {\r\n  const Logout = () => {\r\n    localStorage.setItem(\"teacheruser\", \"\");\r\n    props.handleLogout();\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar shadow\">\r\n      {/* <NavLink exact to='/'  activeClassName='navbar_link'>\r\n        <span><AssignmentIcon/></span>Assignment    \r\n        </NavLink> */}\r\n      <NavLink exact to=\"/profile\" activeClassName=\"navbar_link\">\r\n        <span>\r\n          <PersonIcon />\r\n        </span>{\" \"}\r\n        Profile\r\n      </NavLink>\r\n      <NavLink exact to=\"/dashBoard\" activeClassName=\"navbar_link\">\r\n        <span>\r\n          <DashboardIcon />\r\n        </span>{\" \"}\r\n        DashBoard\r\n      </NavLink>\r\n      <NavLink exact to=\"/announcement\" activeClassName=\"navbar_link\">\r\n        <span>\r\n          <MailRoundedIcon />\r\n        </span>{\" \"}\r\n        Announcement\r\n      </NavLink>\r\n      <NavLink exact to=\"/teacherAssignment\" activeClassName=\"navbar_link\">\r\n        <span>\r\n          <AssignmentIcon />\r\n        </span>{\" \"}\r\n        Assignment\r\n      </NavLink>\r\n      <NavLink exact to=\"/\" onClick={Logout} activeClassName=\"navbar_link\">\r\n        <span>\r\n          <ExitToAppOutlinedIcon />\r\n        </span>{\" \"}\r\n        Logout\r\n      </NavLink>\r\n      {/* <NavLink exact to=\"/error\" activeClassName=\"navbar_link\">\r\n        <span>\r\n          <ExitToAppOutlinedIcon />\r\n        </span>{\" \"}\r\n        Error\r\n      </NavLink> */}\r\n      {/* <Redirect to={'/error'} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\DashBoard.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\profile\\Profile.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\announcement\\Announcement.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\TeacherAssignment.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\authentication\\login.js",["134","135","136","137","138","139","140","141"],"/* eslint-disable react-hooks/rules-of-hooks */\r\n\r\nimport React, { useState, useContext } from \"react\";\r\n// import {teacherid} from \"../context/teacheridcontext.js\"\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport axios from \"../Axios\";\r\nimport \"./login.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TextField, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction login(props) {\r\n  const [loggedIn, setloggedIn] = useState(false);\r\n  const [dataSent, setdataSent] = useState(false);\r\n  const [loginmsg, setLoginmsg] = useState(\"\");\r\n  // const [teacherid, setTeacherid] = useContext(teacherid);\r\n  const [data, setdata] = useState({\r\n    email: String,\r\n    password: String,\r\n  });\r\n  const changedData = (event) => {\r\n    const { name, value } = event.target;\r\n    setdata((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    // console.log(data)\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    axios\r\n      .post(\"auth/login\", data)\r\n      .then((res) => {\r\n        console.log(\"hey\");\r\n        // const cookies = new Cookies();\r\n        // cookies.set('jwt',res.data.token)\r\n        console.log(res.data);\r\n        // console.log(res.data.token)\r\n        if (res.data.accessToken != undefined) {\r\n          localStorage.setItem(\"token\", res.data.accessToken);\r\n          setloggedIn(true);\r\n        }\r\n        if (res.data.teacherid != undefined)\r\n          localStorage.setItem(\"teacheruser\", res.data.teacherid);\r\n        if (res.data.loginmsg != undefined) {\r\n          setdataSent(true);\r\n          setLoginmsg(res.data.loginmsg);\r\n        }\r\n        // setTeacherid(res.data.teacherid)\r\n\r\n        props.setuser(res.data.user);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleCloseSnack = () => {\r\n    setdataSent(false);\r\n  };\r\n  if (localStorage.getItem(\"teacheruser\") != undefined)\r\n    return <Link to={\"/dashBoard\"} />;\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={dataSent}\r\n        autoHideDuration={4000}\r\n        onClose={handleCloseSnack}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleCloseSnack} severity=\"error\">\r\n          {loginmsg}\r\n        </Alert>\r\n      </Snackbar>\r\n      <form className=\"container\" onSubmit={handleSubmit}>\r\n        <div className=\"title\">Sign in</div>\r\n        <div className=\"form-group\">\r\n          <TextField\r\n            type=\"email\"\r\n            id=\"standard-basic\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            required\r\n            onChange={changedData}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <TextField\r\n            type=\"password\"\r\n            id=\"standard-basic\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            required\r\n            onChange={changedData}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"button\">Login</button>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Link exact to={\"/resetPassword\"} className=\"link\">\r\n            Forgot password?\r\n          </Link>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          Dont have an account?\r\n          <span>\r\n            {\" \"}\r\n            <Link exact to={\"/register\"} className=\"link\">\r\n              Create an account\r\n            </Link>{\" \"}\r\n          </span>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default login;\r\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\authentication\\Register.js",["142","143"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../Axios\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport {\r\n  TextField,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport \"./Register.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nfunction Register() {\r\n  const [signup, setsignup] = useState({\r\n    fname: \"\",\r\n    mname: \"\",\r\n    lname: \"\",\r\n    departmentId: \"\",\r\n    semesterId: \"\",\r\n    dob: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [department, setdepartment] = useState([]);\r\n  const [semester, setsemester] = useState([]);\r\n  const [registered, setregistered] = useState(false);\r\n  const [dataSent, setdataSent] = useState(false);\r\n  const [registrationmsg, setRegistrationmsg] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fetchDepartmentDetails() {\r\n      const req = await axios.get(\"/departmentDetails/department\");\r\n      console.log(req.data);\r\n      setdepartment(req.data);\r\n    }\r\n    fetchDepartmentDetails();\r\n  }, []);\r\n\r\n  const callSemester = async (event) => {\r\n    const { name, value } = event.target;\r\n    setsignup((prevValue) => ({\r\n      ...prevValue,\r\n      [name]: value,\r\n    }));\r\n    const temp = { deptid: value };\r\n    const req = await axios.post(\"/departmentDetails/semester\", temp);\r\n    setsemester(req.data);\r\n  };\r\n\r\n  const updateSignUp = (event) => {\r\n    const { value, name } = event.target;\r\n    setsignup((prevValue) => {\r\n      return {\r\n        ...prevValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  const signUpSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await axios\r\n      .post(\"auth/register\", signup)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setdataSent(true);\r\n        setRegistrationmsg(res.data);\r\n        if (res.status == 200) {\r\n          setregistered(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(signup);\r\n    setsignup({});\r\n  };\r\n  const handleCloseSnack = () => {\r\n    setdataSent(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {registered ? (\r\n        <Redirect to={\"/\"} />\r\n      ) : (\r\n        <>\r\n          <Snackbar\r\n            open={dataSent}\r\n            autoHideDuration={4000}\r\n            onClose={handleCloseSnack}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          >\r\n            <Alert onClose={handleCloseSnack} severity=\"error\">\r\n              {registrationmsg}\r\n            </Alert>\r\n          </Snackbar>\r\n          <form className=\"container\" onSubmit={signUpSubmit}>\r\n            <div className=\"title\">Sign up</div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"First name\"\r\n                type=\"text\"\r\n                name=\"fname\"\r\n                value={signup.fname}\r\n                onChange={updateSignUp}\r\n                required\r\n              />{\" \"}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Last name\"\r\n                type=\"text\"\r\n                name=\"mname\"\r\n                value={signup.mname}\r\n                onChange={updateSignUp}\r\n                required\r\n              />{\" \"}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Middle name\"\r\n                type=\"text\"\r\n                name=\"lname\"\r\n                value={signup.lname}\r\n                onChange={updateSignUp}\r\n                required\r\n              />{\" \"}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={signup.email}\r\n                onChange={updateSignUp}\r\n                required\r\n                autoComplete=\"off\"\r\n              />{\" \"}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              {\" \"}\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={signup.password}\r\n                onChange={updateSignUp}\r\n                required\r\n                autoComplete=\"off\"\r\n              />{\" \"}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <FormControl required className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-required-label\">\r\n                  Department\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-required-label\"\r\n                  id=\"demo-simple-select-required\"\r\n                  onChange={callSemester}\r\n                  className={classes.selectEmpty}\r\n                  name=\"departmentId\"\r\n                >\r\n                  {department.map((data, index) => (\r\n                    <MenuItem value={data._id}>{data.deptName}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n                <FormHelperText>Select Department</FormHelperText>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <FormControl required className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-required-label\">\r\n                  Semester\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-required-label\"\r\n                  id=\"demo-simple-select-required\"\r\n                  onChange={updateSignUp}\r\n                  className={classes.selectEmpty}\r\n                  name=\"semesterId\"\r\n                >\r\n                  {semester.map((data, index) => (\r\n                    <MenuItem value={data._id}>{data.sem}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n                <FormHelperText>Select Semester</FormHelperText>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                name=\"dob\"\r\n                defaultValue={new Date()}\r\n                onChange={updateSignUp}\r\n                required\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button className=\"button\">Submit</button>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              Have an account?\r\n              <span>\r\n                {\" \"}\r\n                <Link exact to={\"/\"} className=\"link\">\r\n                  Sign in\r\n                </Link>{\" \"}\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\authentication\\reset_pass.js",["144"],"import axios from '../Axios';\r\nimport React ,{useRef,useState} from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport {useForm} from 'react-hook-form'\r\nimport {TextField} from '@material-ui/core';\r\nimport './reset_pass.css'; \r\nfunction ResetPass() {\r\n    const { register, errors, watch } = useForm({});\r\n    const newPassword = useRef({})\r\n    newPassword.current = watch(\"newPassword\")\r\n    const [otpSent, setotpSent] = useState(false)\r\n    const [data, setdata] = useState({\r\n        email : \"\",\r\n        otp : \"\",\r\n        newPassword: \"\"\r\n    })\r\n    const [passChanged, setPassChanged] = useState(false)\r\n    const handleInput=(event)=>{\r\n        const {value,name} = event.target;\r\n            setdata((prevValue)=>{\r\n                return{\r\n                    ...prevValue,\r\n                    [name]: value,\r\n                }\r\n            });\r\n        }\r\n    const otpSendToEmail = (e) => {\r\n        e.preventDefault();\r\n        \r\n        axios.post('auth/forgot',{\r\n            email : data.email\r\n        }).then(\r\n            res => {\r\n                console.log(data.email)\r\n                setotpSent(true);\r\n            }\r\n        ).catch(\r\n            err => {\r\n                console.log(err)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const resetPassword = (e) => {\r\n        e.preventDefault();\r\n        // console.log(data)\r\n        const reqData = {\r\n            email: data.email,\r\n            otp : data.otp,\r\n            newPassword : data.newPassword\r\n\r\n        }\r\n        // console.log(reqData)\r\n        axios.post('auth/resetPassword',reqData).then(\r\n            res => {\r\n                console.log(res)\r\n                setPassChanged(true)\r\n            }\r\n        ).catch(\r\n            err => {\r\n                console.log(err)\r\n            }\r\n        )\r\n    }\r\n    if(passChanged) return <Redirect to={'/'} />\r\n    if (otpSent) {\r\n        return (\r\n            <>\r\n            {/* <form  onSubmit = {resetPassword}>\r\n                <h3> reset password  here</h3>\r\n                <div className = \"form-group\">\r\n                    <label>otp</label>\r\n                    <input type=\"number\" className=\"form-control\"  placeholder=\"otp\"\r\n                            onChange={handleInput}\r\n                            name=\"otp\"\r\n                            ref = {register ({\r\n                                required: \"You must specify a otp\",\r\n                                minLength: {\r\n                                value: 4,\r\n                                message: \"OTP must have at least 4 characters\"\r\n                                }\r\n                            })}\r\n                            />\r\n                </div>\r\n                \r\n                <div className = \"form-group\">\r\n                    <label>new password</label>\r\n                    <input type=\"password\" className=\"form-control\"  placeholder=\"password\"\r\n                            onChange={handleInput} \r\n                            name=\"newPassword\"\r\n                            ref = {register ({\r\n                                required: \"You must specify a password\",\r\n                                minLength: {\r\n                                value: 8,\r\n                                message: \"Password must have at least 8 characters\"\r\n                                }\r\n                            })}\r\n                            />\r\n                    {errors.newPassword && <p>{errors.newPassword.message}</p>}\r\n                </div>\r\n                <div className = \"form-group\">\r\n                    <label>confirm  password</label>\r\n                    <input type=\"password\" className=\"form-control\"  placeholder=\"confirm password\" \r\n                            name=\"c_password\"\r\n                            ref={register({\r\n                                validate: value =>\r\n                                  value === newPassword.current || \"The passwords do not match\"\r\n                              })}\r\n                            />\r\n                    {errors.newPassword && <p>{errors.newPassword.message}</p>}\r\n                </div>\r\n                <button className=\"btn btn-primary btn-block\">\r\n                    reset\r\n                </button>\r\n            </form> */}\r\n            <form className=\"container\" onSubmit={resetPassword}>\r\n                    <div className=\"title\">OTP Send</div>\r\n                    <div className=\"form-group\">\r\n                    <TextField type=\"number\" id=\"standard-basic\"  label=\"OTP\"  required  onChange={handleInput} \r\n                            name=\"newPassword\"\r\n                            ref = {register ({\r\n                                required: \"You must specify a password\",\r\n                                minLength: {\r\n                                value: 8,\r\n                                message: \"Password must have at least 8 characters\"\r\n                                }\r\n                            })}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <TextField type=\"password\" id=\"standard-basic\" label=\"Password\"  required  onChange={handleInput} \r\n                            name=\"newPassword\"\r\n                            ref = {register ({\r\n                                required: \"You must specify a password\",\r\n                                minLength: {\r\n                                value: 8,\r\n                                message: \"Password must have at least 8 characters\"\r\n                                }\r\n                            })}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <TextField type=\"password\" id=\"standard-basic\" label=\"Confirm Password\" required  name=\"c_password\"\r\n                            ref={register({\r\n                                validate: value =>\r\n                                  value === newPassword.current || \"The passwords do not match\"\r\n                              })}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button  className=\"button\">\r\n                        Send OTP\r\n                        </button>\r\n                    </div>\r\n            \r\n                </form> \r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                \r\n                <form className=\"container\" onSubmit={otpSendToEmail}>\r\n                    <div className=\"title\">Reset</div>\r\n                    <div className=\"form-group\">\r\n                    <TextField type=\"email\" id=\"standard-basic\"  label=\"Email\" name=\"email\" required onChange={handleInput}/>\r\n                    <div className=\"form-group\">\r\n                        <button  className=\"button\">\r\n                        Send OTP\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                </form> \r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ResetPass\r\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\protectroute\\Protectrouteteacher.js",["145","146"],"import React from \"react\";\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\n\r\nfunction Protectrouteteacher({\r\n  isAuth: isAuth,\r\n  Component: Component,\r\n  ...rest\r\n}) {\r\n  let location = useLocation();\r\n  console.log(isAuth);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuth)\r\n          return <Component teacherid={localStorage.getItem(\"teacheruser\")} />;\r\n        else\r\n          return <Redirect to={{ pathname: \"/\", state: { from: location } }} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Protectrouteteacher;\r\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\pdfviewer\\ViewPdf.js",["147"],"import React, { useState, useEffect } from \"react\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\n\r\nfunction ViewPdf() {\r\n  useEffect(() => {\r\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n    console.log(window.location.origin + \"/CE_026_AT_Harshit_Chudasama.pdf\");\r\n  }, []);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <a href=\"file:///C:/Users/faizan/Desktop/SDP_PROJECT/version%203/front/public/UploadedFiles/CE_026_AT_Harshit_Chudasama.pdf\">\r\n        a\r\n      </a>\r\n      <Document\r\n        file=\"file:///C:/Users/faizan/Desktop/SDP_PROJECT/version%203/front/public/UploadedFiles/CE_026_AT_Harshit_Chudasama.pdf\"\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n      >\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n      <p>\r\n        Page {pageNumber} of {numPages}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewPdf;\r\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\DepartmentDashBoard.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\SubmissionStatus.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\FilterDashBoard.js",["148","149","150","151"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../Axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nfunction FilterDashBoard(props) {\r\n  const [filterAssignment, setfilterAssignment] = useState({\r\n    departmentId: \"\",\r\n    semesterId: \"\",\r\n    subjectId: \"\",\r\n    divisionId: \"\",\r\n    batchId: \"\",\r\n    year: \"\",\r\n  });\r\n  const [subjectAssignment, setsubjectAssignment] = useState([]);\r\n  const [filterClick, setfilterClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setfilterAssignment((prevVlaue) => ({\r\n      ...prevVlaue,\r\n      departmentId: props.handleDepartmentDetails.departmentId,\r\n      semesterId: props.handleDepartmentDetails.semesterId,\r\n      subjectId: props.handleDepartmentDetails.subjectId,\r\n      divisionId: props.handleDepartmentDetails.divisionId,\r\n      batchId: props.handleDepartmentDetails.batchId,\r\n      year: props.handleDepartmentDetails.year,\r\n    }));\r\n  }, [props]);\r\n  useEffect(() => {\r\n    // setfilterClick(false);\r\n    console.log(filterAssignment.subjectId);\r\n    async function fetchSubjectData() {\r\n      console.log(filterAssignment);\r\n      const subjectData = {\r\n        subjectId: filterAssignment.subjectId,\r\n        batchId: filterAssignment.batchId,\r\n        year: filterAssignment.year,\r\n      };\r\n      const req = await axios.post(\"/subjectstatus\", subjectData);\r\n      setsubjectAssignment(req.data);\r\n    }\r\n    if (Object.keys(filterAssignment.subjectId).length >= 5) {\r\n      fetchSubjectData();\r\n    }\r\n  }, [ filterAssignment.batchId, filterAssignment.subjectId, filterAssignment.year]);\r\n\r\n  useEffect(() => {\r\n    if(props.isDepartment)\r\n    {\r\n      setfilterClick(true);\r\n    }\r\n\r\n  },[props.isDepartment])\r\n  const filterData = () => {\r\n    setfilterClick(true);\r\n  };\r\n  const assignmentClicked = (event) => {\r\n    event.preventDefault();\r\n    const { value } = event.target;\r\n    subjectAssignment\r\n      .filter((data) => data._id === value)\r\n      .map((fetchdata, index) => props.handleassignmentDetails(fetchdata));\r\n  };\r\n  return (\r\n    <>\r\n      {/* <button onClick={filterData}>Filter</button> */}\r\n      { subjectAssignment.filter((d) => d.uploadedTime.slice(0, 4) === filterAssignment.year).map((data, index) => (\r\n              <div className=\"mainbutton\">\r\n                <button value={data._id} onClick={assignmentClicked}>\r\n                  {data.title}\r\n                </button>\r\n              </div>\r\n            ))\r\n        }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FilterDashBoard;\r\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\announcement\\CreateAnnouncement.js",["152","153"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../Axios\";\r\nimport \"./Announcement.css\";\r\nimport SendAnnouncement from \"./SendAnnouncement\";\r\nimport \"./CreateAnnouncement.css\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { TextField, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction CreateAnnouncement(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState(\"paper\");\r\n  const [dataSent, setdataSent] = useState(false);\r\n\r\n  const [finalId, setfinalId] = useState({\r\n    sendMailID: \"\",\r\n    sendMailName: \"\",\r\n  });\r\n  const [announcement, setannouncement] = useState({\r\n    departmentId: \"\",\r\n    semesterId: \"\",\r\n    divisionId: \"\",\r\n    batchId: \"\",\r\n    sendMailID: \"\",\r\n    sendMailName: \"\",\r\n    subject: \"\",\r\n    email_body: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setannouncement((prevVlaue) => ({\r\n      ...prevVlaue,\r\n      departmentId: props.handleDepartmentDetails.departmentId,\r\n      semesterId: props.handleDepartmentDetails.semesterId,\r\n      divisionId: props.handleDepartmentDetails.divisionId,\r\n      batchId: props.handleDepartmentDetails.batchId,\r\n    }));\r\n  }, [props]);\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setannouncement({\r\n      sendMailID: \"\",\r\n      sendMailName: \"\",\r\n      subject: \"\",\r\n      email_body: \"\",\r\n    });\r\n  };\r\n  const handleCloseSnack = () => {\r\n    setdataSent(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const handleAnnouncement = (event) => {\r\n    const { name, value } = event.target;\r\n    setannouncement((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const sendAnnouncement = async () => {\r\n    const req = await axios.post(\"/announcement\", announcement);\r\n    //   .then(()=>{\r\n    //       //setdataSent(true);\r\n\r\n    //   })\r\n    setdataSent(true);\r\n  };\r\n  const submitAnnouncement = (event) => {\r\n    event.preventDefault();\r\n    console.log(announcement);\r\n    if (Object.keys(announcement.batchId).length <= 5) {\r\n      if (Object.keys(announcement.divisionId).length <= 5) {\r\n        if (Object.keys(announcement.semesterId).length <= 5) {\r\n          if (Object.keys(announcement.departmentId).length <= 5) {\r\n          } else {\r\n            setfinalId({\r\n              sendMailID: announcement.departmentId,\r\n              sendMailName: \"departmentId\",\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"semesterId\");\r\n          setfinalId({\r\n            sendMailID: announcement.semesterId,\r\n            sendMailName: \"semesterId\",\r\n          });\r\n        }\r\n      } else {\r\n        setfinalId({\r\n          sendMailID: announcement.divisionId,\r\n          sendMailName: \"divisionId\",\r\n        });\r\n      }\r\n    } else {\r\n      setfinalId({\r\n        sendMailID: announcement.batchId,\r\n        sendMailName: \"batchId\",\r\n      });\r\n    }\r\n    announcement.sendMailID = finalId.sendMailID;\r\n    announcement.sendMailName = finalId.sendMailName;\r\n    sendAnnouncement();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Snackbar\r\n          open={dataSent}\r\n          autoHideDuration={6000}\r\n          onClose={handleCloseSnack}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert onClose={handleCloseSnack} severity=\"success\">\r\n            Announcement Send Successfully!!!!\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <button className=\"createButton\" onClick={handleClickOpen(\"body\")}>\r\n          <span className=\"addIcon\">\r\n            <AddBoxIcon style={{ fontSize: \"50px\" }} />\r\n          </span>{\" \"}\r\n          Create\r\n        </button>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          scroll={scroll}\r\n          aria-labelledby=\"scroll-dialog-title\"\r\n          aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"scroll-dialog-title\">Announcement</DialogTitle>\r\n          <DialogContent dividers={scroll === \"paper\"}>\r\n            <DialogContentText\r\n              id=\"scroll-dialog-description\"\r\n              ref={descriptionElementRef}\r\n              tabIndex={-1}\r\n            >\r\n              <div className=\"form-group\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  id=\"standard-basic\"\r\n                  label=\"Subject\"\r\n                  name=\"subject\"\r\n                  style={{ width: \"500px\" }}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  value={announcement.subject}\r\n                  required\r\n                  onChange={handleAnnouncement}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"Body\"\r\n                  multiline\r\n                  rows={15}\r\n                  name=\"email_body\"\r\n                  value={announcement.email_body}\r\n                  style={{ width: \"500px\" }}\r\n                  margin=\"dense\"\r\n                  required\r\n                  onChange={handleAnnouncement}\r\n                />\r\n              </div>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n            <Button onClick={submitAnnouncement} color=\"primary\">\r\n              Send Announcement\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateAnnouncement;\r\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\announcement\\SendAnnouncement.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\announcement\\AllAnnouncement.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\DepartmentDetails.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\CreateAssignment.js",["154","155","156","157","158","159","160","161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport UploadFiles from \"./UploadFiles\";\r\nimport axios from \"../Axios\";\r\nimport \"./CreateAssignment.css\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { TextField, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nfunction timeout(delay) {\r\n  return new Promise((res) => setTimeout(res, delay));\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction CreateAssignment(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState(\"paper\");\r\n  const [dataSent, setdataSent] = useState(false);\r\n  const [createLabClick, setcreateLabClick] = useState(false);\r\n  const [uploadedfile, setUploadedFile] = useState();\r\n  const [state, setState] = useState({\r\n    teacherId: localStorage.getItem(\"teacheruser\"),\r\n    departmentId: \"\",\r\n    semesterId: \"\",\r\n    subjectId: \"\",\r\n    divisionId: \"\",\r\n    batchId: \"\",\r\n    description: \"\",\r\n    title: \"\",\r\n    DeadLine: \"\",\r\n    email: \"\",\r\n    uploadedTime: new Date().toLocaleDateString(),\r\n    GuidlineFilePath: \"\",\r\n    driveFileId: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setState((prevVlaue) => ({\r\n      ...prevVlaue,\r\n      departmentId: props.handleDepartmentDetails.departmentId,\r\n      semesterId: props.handleDepartmentDetails.semesterId,\r\n      subjectId: props.handleDepartmentDetails.subjectId,\r\n      divisionId: props.handleDepartmentDetails.divisionId,\r\n      batchId: props.handleDepartmentDetails.batchId,\r\n    }));\r\n  }, [props]);\r\n\r\n  //change\r\n  useEffect(() => {\r\n    if(state.GuidlineFilePath!==\"\" && state.teacherId!==\"\" && state.driveFileId){\r\n      axios\r\n          .post(\"/add\", state)\r\n          .then((res) => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            setdataSent(true);\r\n          })\r\n          .catch((err) => console.log(err));\r\n    }\r\n  }, [state.GuidlineFilePath]) \r\n\r\n  const addUploadedFile = (File) => {\r\n    console.log(\"from add uploaded files\");\r\n    setUploadedFile(File);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(state.DeadLine);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"file\", uploadedfile);\r\n    console.log(uploadedfile);\r\n\r\n    await axios\r\n      .post(\"/googledrive/createfile\", data, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then(async (res) => {\r\n        console.log(res.data);\r\n        await setState((prevState) => ({\r\n          ...prevState,\r\n          driveFileId: res.data.id,\r\n        }));\r\n        await axios\r\n          .post(\"/googledrive/getviewlink\", { id: res.data.id })\r\n          .then(async (res) => {\r\n            console.log(res.data.webViewLink);\r\n            await setState((prevState) => ({\r\n              ...prevState,\r\n              GuidlineFilePath: res.data.webViewLink,\r\n              // GuidlineFilePath: res.data.webViewLink,\r\n            }));\r\n          });\r\n        console.log(\"assignment for send\", state);\r\n        console.log(\"after state prints\");\r\n        \r\n      });\r\n  };\r\n  // const CreateLab = () => {\r\n  //   setcreateLabClick(true);\r\n  // };\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState({\r\n      teacherId: \"\",\r\n      departmentId: \"\",\r\n      semesterId: \"\",\r\n      subjectId: \"\",\r\n      divisionId: \"\",\r\n      batchId: \"\",\r\n      description: \"\",\r\n      title: \"\",\r\n      DeadLine: \"\",\r\n      email: \"\",\r\n      uploadedTime: \"\",\r\n      GuidlineFilePath: \"\",\r\n      driveFileId: \"\",\r\n    });\r\n  };\r\n\r\n  const handleCloseSnack = () => {\r\n    setdataSent(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={dataSent}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnack}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleCloseSnack} severity=\"success\">\r\n          Assignment Created Successfully!!!!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <button className=\"createButton\" onClick={handleClickOpen(\"body\")}>\r\n        <span className=\"addIcon\">\r\n          <AddBoxIcon style={{ fontSize: \"50px\" }} />\r\n        </span>{\" \"}\r\n        Create\r\n      </button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">Assignment</DialogTitle>\r\n        <DialogContent dividers={scroll === \"paper\"}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            <div className=\"form-group\">\r\n              {\" \"}\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={state.title}\r\n                onChange={handleChange}\r\n                required\r\n                autoComplete=\"off\"\r\n              />{\" \"}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                type=\"text\"\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Description\"\r\n                multiline\r\n                rows={3}\r\n                name=\"description\"\r\n                value={state.description}\r\n                style={{ width: \"500px\" }}\r\n                margin=\"dense\"\r\n                required\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Deadline\"\r\n                type=\"datetime-local\"\r\n                name=\"DeadLine\"\r\n                defaultValue={new Date()}\r\n                value={state.DeadLine}\r\n                onChange={handleChange}\r\n                required\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <UploadFiles addUploadedFile={addUploadedFile} />\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Create Assignment\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\nexport default CreateAssignment;","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\AllAssignment.js",["163","164","165"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../Axios\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction AllAssignment(props) {\r\n  const classes = useStyles();\r\n  const [allAssignment, setallAssignment] = useState([]);\r\n  const [filterClick, setfilterClick] = useState(false);\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleexpanded = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const [filterBatch, setfilterBatch] = useState({\r\n    departmentId: \"\",\r\n    semesterId: \"\",\r\n    subjectId: \"\",\r\n    divisionId: \"\",\r\n    batchId: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setfilterBatch((prevVlaue) => ({\r\n      ...prevVlaue,\r\n      departmentId: props.handleDepartmentDetails.departmentId,\r\n      semesterId: props.handleDepartmentDetails.semesterId,\r\n      subjectId: props.handleDepartmentDetails.subjectId,\r\n      divisionId: props.handleDepartmentDetails.divisionId,\r\n      batchId: props.handleDepartmentDetails.batchId,\r\n    }));\r\n  }, [props]);\r\n  useEffect(() => {\r\n    console.log(filterBatch.batchId);\r\n    async function fetchSubjectData() {\r\n      // console.log(filterAssignment.subjectId);\r\n      const subjectData = {\r\n        batId: filterBatch.batchId,\r\n        subjectId: filterBatch.subjectId,\r\n      };\r\n      const req = await axios.post(\"/allAssignment\", subjectData);\r\n      setallAssignment(req.data);\r\n    }\r\n    if (Object.keys(filterBatch.batchId).length >= 5) {\r\n      fetchSubjectData();\r\n    }\r\n  }, [filterBatch.batchId]);\r\n  // const filterData = () => {\r\n  //   setfilterClick(true);\r\n  // };\r\n  useEffect(() => {\r\n    if(props.isDepartment)\r\n    {\r\n      setfilterClick(true);\r\n    }\r\n  },[props.isDepartment])\r\n  return (\r\n    <>\r\n      {/* <button onClick={filterData}>Filter</button> */}\r\n      {/* {filterClick?setallAssignment.map((filteredData,index)=>(\r\n            <li>{filteredData._id}</li>\r\n            ))\r\n            :null} */}\r\n      {filterClick\r\n        ? allAssignment\r\n            .filter((data) => data._id !== null)\r\n            .map((filteredData, index) => (\r\n              <Accordion\r\n                expanded={expanded === filteredData._id}\r\n                onChange={handleexpanded(filteredData._id)}\r\n              >\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    {filteredData.title}\r\n                  </Typography>\r\n                  <Typography className={classes.secondaryHeading}>\r\n                    {filteredData.DeadLine}\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography>{filteredData.description}</Typography>\r\n                  <Typography>\r\n                 <button className=\"btn btn-primary\">\r\n                      <a\r\n                        href={filteredData.GuidlineFilePath}\r\n                        target=\"_blank\"\r\n                        style={{ color: \"white\" }}\r\n                      >\r\n                        view\r\n                      </a>\r\n                    </button>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            ))\r\n        : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllAssignment;\r\n","C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\Teacher\\UploadFiles.js",[],"C:\\Users\\saurabh biswas\\Desktop\\Assignment-4\\teacher\\teacher_frontend\\src\\dashBoard\\SendPersonalEmail.js",["166","167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../Axios\";\r\nimport \"../announcement/Announcement.css\";\r\nimport \"../announcement/CreateAnnouncement.css\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { TextField, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction CreateAnnouncement(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState(\"paper\");\r\n  const [dataSent, setdataSent] = useState(false);\r\n\r\n  \r\n  const [announcement, setannouncement] = useState({\r\n    sendMailID: \"\",\r\n    subject: \"\",\r\n    email_body: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setannouncement((prevVlaue) => ({\r\n      ...prevVlaue,\r\n      sendMailID: props.StudentEmailID,\r\n    }));\r\n    setOpen(true);\r\n    setScroll(\"bodyy\");\r\n  }, [props.StudentEmailID]);\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setannouncement({\r\n      sendMailID: \"\",\r\n      subject: \"\",\r\n      email_body: \"\",\r\n    });\r\n  };\r\n  const handleCloseSnack = () => {\r\n    setdataSent(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const handleAnnouncement = (event) => {\r\n    const { name, value } = event.target;\r\n    setannouncement((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  \r\n  const submitAnnouncement = async (event) => {\r\n    event.preventDefault();\r\n    const req = await axios.post(\"/personalMail\", announcement);\r\n    setdataSent(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Snackbar\r\n          open={dataSent}\r\n          autoHideDuration={6000}\r\n          onClose={handleCloseSnack}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        >\r\n          <Alert onClose={handleCloseSnack} severity=\"success\">\r\n            Mail Send Successfully!!!!\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {/* <button className=\"createButton\" onClick={handleClickOpen(\"body\")}>\r\n          <span className=\"addIcon\">\r\n            <AddBoxIcon style={{ fontSize: \"50px\" }} />\r\n          </span>{\" \"}\r\n          Create\r\n        </button> */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          scroll={scroll}\r\n          aria-labelledby=\"scroll-dialog-title\"\r\n          aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"scroll-dialog-title\">Personal Mail</DialogTitle>\r\n          <DialogContent dividers={scroll === \"paper\"}>\r\n            <DialogContentText\r\n              id=\"scroll-dialog-description\"\r\n              ref={descriptionElementRef}\r\n              tabIndex={-1}\r\n            >\r\n              <div className=\"form-group\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  id=\"standard-basic\"\r\n                  label=\"Subject\"\r\n                  name=\"subject\"\r\n                  style={{ width: \"500px\" }}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  value={announcement.subject}\r\n                  required\r\n                  onChange={handleAnnouncement}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"Body\"\r\n                  multiline\r\n                  rows={15}\r\n                  name=\"email_body\"\r\n                  value={announcement.email_body}\r\n                  style={{ width: \"500px\" }}\r\n                  margin=\"dense\"\r\n                  required\r\n                  onChange={handleAnnouncement}\r\n                />\r\n              </div>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n            <Button onClick={submitAnnouncement} color=\"primary\">\r\n              Send Mail\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateAnnouncement;\r\n",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":3,"column":25,"nodeType":"175","messageId":"176","endLine":3,"endColumn":33},{"ruleId":"173","severity":1,"message":"177","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"173","severity":1,"message":"178","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":13},{"ruleId":"173","severity":1,"message":"179","line":12,"column":8,"nodeType":"175","messageId":"176","endLine":12,"endColumn":13},{"ruleId":"173","severity":1,"message":"180","line":20,"column":8,"nodeType":"175","messageId":"176","endLine":20,"endColumn":27},{"ruleId":"173","severity":1,"message":"181","line":21,"column":8,"nodeType":"175","messageId":"176","endLine":21,"endColumn":15},{"ruleId":"173","severity":1,"message":"182","line":22,"column":5,"nodeType":"175","messageId":"176","endLine":22,"endColumn":11},{"ruleId":"173","severity":1,"message":"183","line":23,"column":10,"nodeType":"175","messageId":"176","endLine":23,"endColumn":17},{"ruleId":"173","severity":1,"message":"184","line":28,"column":10,"nodeType":"175","messageId":"176","endLine":28,"endColumn":19},{"ruleId":"173","severity":1,"message":"185","line":28,"column":21,"nodeType":"175","messageId":"176","endLine":28,"endColumn":33},{"ruleId":"173","severity":1,"message":"186","line":31,"column":11,"nodeType":"175","messageId":"176","endLine":31,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":2,"column":19,"nodeType":"175","messageId":"176","endLine":2,"endColumn":27},{"ruleId":"173","severity":1,"message":"187","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":20},{"ruleId":"173","severity":1,"message":"188","line":3,"column":27,"nodeType":"175","messageId":"176","endLine":3,"endColumn":37},{"ruleId":"173","severity":1,"message":"174","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":18},{"ruleId":"173","severity":1,"message":"189","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":14},{"ruleId":"173","severity":1,"message":"190","line":17,"column":10,"nodeType":"175","messageId":"176","endLine":17,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":44,"column":34,"nodeType":"193","messageId":"194","endLine":44,"endColumn":36},{"ruleId":"191","severity":1,"message":"192","line":48,"column":32,"nodeType":"193","messageId":"194","endLine":48,"endColumn":34},{"ruleId":"191","severity":1,"message":"192","line":50,"column":31,"nodeType":"193","messageId":"194","endLine":50,"endColumn":33},{"ruleId":"191","severity":1,"message":"192","line":65,"column":43,"nodeType":"193","messageId":"194","endLine":65,"endColumn":45},{"ruleId":"173","severity":1,"message":"189","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":14},{"ruleId":"191","severity":1,"message":"195","line":83,"column":24,"nodeType":"193","messageId":"194","endLine":83,"endColumn":26},{"ruleId":"173","severity":1,"message":"196","line":8,"column":23,"nodeType":"175","messageId":"176","endLine":8,"endColumn":29},{"ruleId":"197","severity":1,"message":"198","line":5,"column":3,"nodeType":"199","messageId":"200","endLine":5,"endColumn":17,"fix":"201"},{"ruleId":"197","severity":1,"message":"202","line":6,"column":3,"nodeType":"199","messageId":"200","endLine":6,"endColumn":23,"fix":"203"},{"ruleId":"173","severity":1,"message":"204","line":10,"column":22,"nodeType":"175","messageId":"176","endLine":10,"endColumn":35},{"ruleId":"173","severity":1,"message":"189","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":14},{"ruleId":"173","severity":1,"message":"205","line":14,"column":10,"nodeType":"175","messageId":"176","endLine":14,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":43,"column":6,"nodeType":"208","endLine":43,"endColumn":84,"suggestions":"209"},{"ruleId":"173","severity":1,"message":"210","line":52,"column":9,"nodeType":"175","messageId":"176","endLine":52,"endColumn":19},{"ruleId":"173","severity":1,"message":"211","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":24},{"ruleId":"173","severity":1,"message":"212","line":88,"column":11,"nodeType":"175","messageId":"176","endLine":88,"endColumn":14},{"ruleId":"173","severity":1,"message":"213","line":16,"column":3,"nodeType":"175","messageId":"176","endLine":16,"endColumn":14},{"ruleId":"173","severity":1,"message":"214","line":17,"column":3,"nodeType":"175","messageId":"176","endLine":17,"endColumn":13},{"ruleId":"173","severity":1,"message":"215","line":18,"column":3,"nodeType":"175","messageId":"176","endLine":18,"endColumn":11},{"ruleId":"173","severity":1,"message":"216","line":19,"column":3,"nodeType":"175","messageId":"176","endLine":19,"endColumn":17},{"ruleId":"173","severity":1,"message":"217","line":20,"column":3,"nodeType":"175","messageId":"176","endLine":20,"endColumn":9},{"ruleId":"173","severity":1,"message":"183","line":27,"column":10,"nodeType":"175","messageId":"176","endLine":27,"endColumn":17},{"ruleId":"173","severity":1,"message":"218","line":44,"column":10,"nodeType":"175","messageId":"176","endLine":44,"endColumn":24},{"ruleId":"173","severity":1,"message":"219","line":44,"column":26,"nodeType":"175","messageId":"176","endLine":44,"endColumn":43},{"ruleId":"206","severity":1,"message":"220","line":84,"column":6,"nodeType":"208","endLine":84,"endColumn":30,"suggestions":"221"},{"ruleId":"173","severity":1,"message":"222","line":8,"column":22,"nodeType":"175","messageId":"176","endLine":8,"endColumn":31},{"ruleId":"206","severity":1,"message":"223","line":64,"column":6,"nodeType":"208","endLine":64,"endColumn":27,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":105,"column":23,"nodeType":"227","endLine":109,"endColumn":24},{"ruleId":"173","severity":1,"message":"228","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":18},{"ruleId":"173","severity":1,"message":"229","line":39,"column":9,"nodeType":"175","messageId":"176","endLine":39,"endColumn":24},{"ruleId":"173","severity":1,"message":"212","line":79,"column":11,"nodeType":"175","messageId":"176","endLine":79,"endColumn":14},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'teacherid' is defined but never used.","'Error' is defined but never used.","'axios' is defined but never used.","'Protectrouteteacher' is defined but never used.","'ViewPdf' is defined but never used.","'isAuth' is assigned a value but never used.","'timeout' is defined but never used.","'teacherid' is assigned a value but never used.","'setTeacherid' is assigned a value but never used.","'config' is assigned a value but never used.","'ReactSession' is defined but never used.","'useContext' is defined but never used.","'Button' is defined but never used.","'loggedIn' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'errors' is assigned a value but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"232","text":"233"},"Destructuring assignment Component unnecessarily renamed.",{"range":"234","text":"235"},"'setPageNumber' is assigned a value but never used.","'filterClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterAssignment'. Either include it or remove the dependency array.","ArrayExpression",["236"],"'filterData' is assigned a value but never used.","'SendAnnouncement' is defined but never used.","'req' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormHelperText' is defined but never used.","'Select' is defined but never used.","'createLabClick' is assigned a value but never used.","'setcreateLabClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["237"],"'withTheme' is defined but never used.","React Hook useEffect has a missing dependency: 'filterBatch.subjectId'. Either include it or remove the dependency array.",["238"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'AddBoxIcon' is defined but never used.","'handleClickOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[130,144],"isAuth",[149,169],"Component",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [filterAssignment, filterAssignment.batchId, filterAssignment.subjectId, filterAssignment.year]",{"range":"245","text":"246"},"Update the dependencies array to be: [state, state.GuidlineFilePath]",{"range":"247","text":"248"},"Update the dependencies array to be: [filterBatch.batchId, filterBatch.subjectId]",{"range":"249","text":"250"},[1505,1583],"[filterAssignment, filterAssignment.batchId, filterAssignment.subjectId, filterAssignment.year]",[2617,2641],"[state, state.GuidlineFilePath]",[2170,2191],"[filterBatch.batchId, filterBatch.subjectId]"]